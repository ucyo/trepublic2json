name: Release

on: 
  workflow_dispatch:

jobs:

  build:
    name: Build the Python distribution
    runs-on: ubuntu-latest
    permissions:
      contents: write
    outputs:
      tag: ${{ steps.get_version.outputs.version }}
    steps:
    - uses: actions/checkout@v4
    - uses: eifinger/setup-rye@v2
      with:
        version: '0.28.0'
    - run: rye build --clean --all --verbose
    - id: get_version
      run: echo "version=$(rye version)" >> $GITHUB_OUTPUT
    - name: Store the distribution packages
      uses: actions/upload-artifact@v4
      with:
        name: python-package-distributions
        path: dist/

  publish-to-pypi:
    name: Publish to PyPI
    needs:
    - build
    runs-on: ubuntu-latestgh-action-sigstore-python
    outputs:
      tag: ${{ needs.build.outputs.tag }}

    environment:
      name: pypi
      url: https://pypi.org/p/trepublic2json

    permissions:
      id-token: write  # IMPORTANT: mandatory for trusted publishing

    steps:
    - name: Download all the dists
      uses: actions/download-artifact@v4
      with:
        name: python-package-distributions
        path: dist/
    - name: Publish distribution to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        password: ${{ secrets.PYPI_TOKEN }}
  
  docker-release:
    name: Build and push image to Dockerhub 
    needs:
    - publish-to-pypi
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
    - name: Checkout the repository
      uses: actions/checkout@v4
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    - name: Build and push the Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: |
          ${{ secrets.DOCKER_USERNAME }}/trepublic2json:latest
          ${{ secrets.DOCKER_USERNAME }}/trepublic2json:${{ needs.publish-to-pypi.outputs.tag }}
  
  github-release:
    name: Sign and upload to GitHub Release
    needs:
    - publish-to-pypi
    runs-on: ubuntu-latest

    permissions:
      contents: write  # IMPORTANT: mandatory for making GitHub Releases
      id-token: write  # IMPORTANT: mandatory for sigstore

    steps:
    - name: Download all the dists
      uses: actions/download-artifact@v4
      with:
        name: python-package-distributions
        path: dist/
    - name: Sign the dists with Sigstore
      uses: sigstore/gh-action-sigstore-python@v2.1.1
      with:
        inputs: >-
          ./dist/*.tar.gz
          ./dist/*.whl
    - name: Create GitHub Release
      env:
        GITHUB_TOKEN: ${{ github.token }}
      run: >-
        gh release create '${{ needs.publish-to-pypi.outputs.tag }}'
        --repo '${{ github.repository }}'
        --notes ""
        --title "v${{ needs.publish-to-pypi.outputs.tag }}"
    - name: Upload artifact signatures to GitHub Release
      env:
        GITHUB_TOKEN: ${{ github.token }}
      # Upload to GitHub Release using the `gh` CLI.
      # `dist/` contains the built packages, and the
      # sigstore-produced signatures and certificates.
      run: >-
        gh release upload '${{ needs.publish-to-pypi.outputs.tag }}' dist/**
        --repo '${{ github.repository }}'